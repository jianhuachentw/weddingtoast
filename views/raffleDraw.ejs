<!DOCTYPE html>
<html>
<head>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>

<link href="css/bootstrap.min.css" rel="stylesheet">
<style>
.toast {
    left: 0;
    top: 0;
    position: absolute;
    z-index: -1;
}

.label-as-badge {
    border-radius: 1em;
}
</style>

<meta charset="UTF-8">
</head>

<body background="images/bg.jpg">

<div class="container">

<br>
<div>
<button type="button" class="btn btn-success btn-lg" style="z-index: 10; float: left;" onclick='reset(); if (toasts.length != 0) {draw();}'>抽獎囉</button>

	<span style="float: right; margin: 0 auto; display:inline-block;" class="label label-primary label-as-badge">
	<h5>留言人數: <span id="count"></span></h5>
	<h5 style="display:none">拍貼人數: <span id="photo_count"></span></h5>
	</span>
</div>

<div class='toast' id='toastBase' style="height:100%; width:100%; display:none;">
	<h1>
		<div style="text-align: center;">
            <img class='profile_pic' src=""></img>
			<span class='name' style="color: blue"></span><span class='say'>&nbsp;說：</span><br>
			<span class='text' style="display:block; margin: 0 auto; word-wrap:break-word; width:70%"></span>
		</div>
	</h1>
	<div class='image'
	style="background-image: url('');
	  background-size: contain;
	  background-position: center;
	  background-repeat: no-repeat;
	  height: 80%;
	  width: 80%;
	  display:block;
	  margin: 0 auto;">
    </div>
</div>
</div>

<script>
var index = 0;
var count = 300;
var lastToastIndex = -1;
var lastPhotoIndex = -1;
var lastRandom = -1;
var newToasts = <%- JSON.stringify(toasts) %>;
var newBoothPhotos = <%- JSON.stringify(photos) %>;
var toasts = [];
var boothPhotos = [];
var serial = 0;

updateToasts(newToasts);
updatePhotoBooth(newBoothPhotos);

setTimeout(updateToastsFromServer, 1000);

function updateToastsFromServer() {
	watchDog = setTimeout(updateToastsFromServer, 120000);
	$.get( "get-toasts?serial=" + serial, function(resData) {
		clearTimeout(watchDog);
		if (serial != resData.serial) {
			serial = resData.serial;
			newToasts = resData.toasts;
			updateToasts(newToasts);
			newBoothPhotos = resData.photos;
			updatePhotoBooth(newBoothPhotos);
		}
		setTimeout(updateToastsFromServer, 1000);
	});
}

function updateToasts(newToasts) {
	for (i = 0; i < newToasts.length; i++) {
		var found = false;
		for (j = 0; j < toasts.length; j++) {
			if (newToasts[i].id === toasts[j].id) {
				found = true;
				break;
			}
		}

		var t;
		if (found) {
			t = $('#toast' + toasts[j].id);
			if (newToasts[i].hidden) {
				t.remove();
				toasts.splice(j, 1);
			} else if (toasts[j].serial < newToasts[i].serial) {
                t.find('.profile_pic').attr('src', "//graph.facebook.com/" + newToasts[i].id + "/picture")
				t.find('.name').text(newToasts[i].name);
				t.find('.text').text(newToasts[i].text);
				var d = new Date();
				t.find('.image').css('background-image', "url(authorized/" + newToasts[i].image + "?" + d.getTime() + ")");
				toasts[j] = newToasts[i];
			}
		} else if (!newToasts[i].hidden) {
			t = $('#toastBase').clone();
			t.attr('id', 'toast' + newToasts[i].id);
			$('#toastBase').after(t);
            t.find('.profile_pic').attr('src', "//graph.facebook.com/" + newToasts[i].id + "/picture")
			t.find('.name').text(newToasts[i].name);
			t.find('.text').text(newToasts[i].text);
			t.find('.image').css('background-image', "url(authorized/" + newToasts[i].image + ")");
			toasts.push(newToasts[i]);
		}
	}
	$('#count').text(toasts.length);
}

function updatePhotoBooth(newBoothPhotos) {
	for (i = 0; i < newBoothPhotos.length; i++) {
		var found = false;
		for (j = 0; j < boothPhotos.length; j++) {
			if (newBoothPhotos[i] === boothPhotos[j]) {
				found = true;
				break;
			}
		}

		var t;
		if (!found) {
			t = $('#toastBase').clone();
			t.attr('id', 'photo' + basename(newBoothPhotos[i]));
			$('#toastBase').after(t);
			t.find('.profile_pic').attr('src', "")
			t.find('.name').text('');
			t.find('.text').text('');
			t.find('.say').text('');
			t.find('.image').css('background-image', "url(photobooth/" + newBoothPhotos[i] + ")");
			boothPhotos.push(newBoothPhotos[i]);
		}
	}
	$('#photo_count').text(getBoothPhotoCount());
}

function getBoothPhotoCount() {
    var count = 0;
    for (i = 0; i < boothPhotos.length; i++) {
        if (!isPlaceholder(boothPhotos[i])) {
            count++;
        }
    }
    return count;
}

function isPlaceholder(filename) {
    return filename.indexOf('_n_') != -1;
}


function basename(filename) {
	return filename.substr(0, filename.lastIndexOf('.'));
}

function reset() {
	count = 300;
}

function draw() {
	hideLastShown();

    var total = toasts.length + boothPhotos.length;
	var random = Math.floor(Math.random() * total);
	if (total > 1) {
		var valid = false;
		while (!valid) {
			valid = true;
			random = Math.floor(Math.random() * total);
			if (random >= toasts.length && isPlaceholder(boothPhotos[random - toasts.length])) {
				valid = false;
				console.log('selected ' + boothPhotos[random - toasts.length] + ' retrying');
			}
            if (random == lastRandom) {
                valid = false;
            }
		}
	}
	lastRandom = random;
	count--;
	console.log('count = ' + count + ' random = ' + random);
	if (random < toasts.length) {
		drawToasts(random);
	} else {
		random = random - toasts.length;
		drawPhotoBooth(random);
	}

	if (count > 0) {
		setTimeout(draw, interval(count));
	}
}

function hideLastShown() {
	if (-1 != lastToastIndex && toasts[lastToastIndex]) {
		$('#toast' + toasts[lastToastIndex].id).hide();
	}

	if (-1 != lastPhotoIndex && boothPhotos[lastPhotoIndex]) {
		$('#photo' + basename(boothPhotos[lastPhotoIndex])).hide();
	}
}

function drawToasts(index) {
	$('#toast' + toasts[index].id).show();
	lastToastIndex = index;
}

function drawPhotoBooth(index) {
	$('#photo' + basename(boothPhotos[index])).show();
	lastPhotoIndex = index;
}

function interval(count) {
	if (count > 100) {
		return 10;
	} else if (count > 50) {
		return 50;
	} else if (count > 10) {
		return 100;
	} else if (count > 4) {
		return 500;
	} else {
		return 800;
	}
}

</script>

</body>
</html>
